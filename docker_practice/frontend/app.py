from flask import Flask, render_template_string, request
import requests

app = Flask(__name__)

# –ü—Ä–æ—Å—Ç–æ –ø–æ–¥—Å–∫–∞–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
ALLOWED_AUTHORS = ["–î–∂–æ—Ä–¥–∂ –û—Ä—É—ç–ª–ª", "–û–ª–¥–æ—Å –•–∞–∫—Å–ª–∏", "–†—ç–π –ë—Ä—ç–¥–±–µ—Ä–∏"]

# HTML-—à–∞–±–ª–æ–Ω
HTML_TEMPLATE = """
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <title>–ü–æ–∏—Å–∫ –∫–Ω–∏–≥</title>
    <style>
        body { font-family: sans-serif; padding: 2em; max-width: 600px; margin: auto; }
        input[type="text"] { padding: 0.5em; width: 100%; margin-bottom: 1em; }
        button { padding: 0.5em 1em; }
        .error { color: darkred; margin-top: 1em; }
        .result { margin-top: 1em; }
        .book { margin-bottom: 0.5em; }
        .hint { font-size: 0.9em; color: gray; }
    </style>
</head>
<body>
    <h2>–ü–æ–∏—Å–∫ –∫–Ω–∏–≥ –ø–æ –∞–≤—Ç–æ—Ä—É</h2>
    <p class="hint">–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∏/–∏–ª–∏ —Ñ–∞–º–∏–ª–∏—é –æ–¥–Ω–æ–≥–æ –∏–∑ –∞–≤—Ç–æ—Ä–æ–≤: <strong>{{ allowed }}</strong></p>
    <form method="GET">
        <input type="text" name="author" placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –•–∞–∫—Å–ª–∏ –û–ª–¥–æ—Å" value="{{ query or '' }}" />
        <button type="submit">–ü–æ–∏—Å–∫</button>
    </form>

    {% if error %}
        <div class="error">{{ error }}</div>
    {% endif %}

    {% if books %}
        <div class="result">
            <h3>–ù–∞–π–¥–µ–Ω–æ –∫–Ω–∏–≥: {{ books|length }}</h3>
            {% for book in books %}
                <div class="book">üìñ <strong>{{ book.title }}</strong> ‚Äî {{ book.author }}</div>
            {% endfor %}
        </div>
    {% endif %}
</body>
</html>
"""

@app.route("/", methods=["GET"])
def index():
    query = request.args.get("author", "")
    error = None
    books = []

    if query:
        try:
            # –í–æ –≤—Ä–µ–º—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –±–µ–∑ Docker –∏—Å–ø–æ–ª—å–∑—É–π localhost
            resp = requests.get("http://backend:5000/search", params={"author": query}, timeout=3)
            if resp.status_code == 200:
                books = resp.json()
                if not books:
                    error = "–ö–Ω–∏–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –∏–º—è –∏/–∏–ª–∏ —Ñ–∞–º–∏–ª–∏—é –∞–≤—Ç–æ—Ä–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, '–û—Ä—É—ç–ª–ª', '–•–∞–∫—Å–ª–∏ –û–ª–¥–æ—Å')."
            else:
                error = "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ —Å–µ—Ä–≤–µ—Ä—É."
        except Exception:
            error = "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É."

    return render_template_string(HTML_TEMPLATE,
                                  books=books,
                                  error=error,
                                  query=query,
                                  allowed=", ".join(ALLOWED_AUTHORS))

if __name__ == "__main__":
    # –†–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ –ª–æ–∫–∞–ª—å–Ω–æ, —Ç–∞–∫ –∏ –≤ Docker
    app.run(host="0.0.0.0", port=5001)
